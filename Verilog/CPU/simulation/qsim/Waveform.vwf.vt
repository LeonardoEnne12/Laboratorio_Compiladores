// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/20/2022 20:47:19"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          CPU
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module CPU_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg [4:0] instruIN;
reg resetDis;
reg resetPC;
// wires                                               
wire [6:0] Display1;
wire [6:0] Display2;
wire [6:0] Display3;
wire [6:0] Display4;
wire [6:0] LEDs;
wire NotF;
wire [31:0] inst;
wire [31:0] out;

// assign statements (if any)                          
CPU i1 (
// port map - connection between master ports and signals/registers   
	.Display1(Display1),
	.Display2(Display2),
	.Display3(Display3),
	.Display4(Display4),
	.LEDs(LEDs),
	.NotF(NotF),
	.clk(clk),
	.inst(inst),
	.instruIN(instruIN),
	.out(out),
	.resetDis(resetDis),
	.resetPC(resetPC)
);
initial 
begin 
#7500000 $finish;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #2500 1'b1;
	#2500;
end 
// instruIN[ 4 ]
initial
begin
	instruIN[4] = 1'b0;
end 
// instruIN[ 3 ]
initial
begin
	instruIN[3] = 1'b0;
end 
// instruIN[ 2 ]
initial
begin
	instruIN[2] = 1'b1;
end 
// instruIN[ 1 ]
initial
begin
	instruIN[1] = 1'b0;
end 
// instruIN[ 0 ]
initial
begin
	instruIN[0] = 1'b0;
end 

// resetDis
initial
begin
	resetDis = 1'b0;
end 

// resetPC
initial
begin
	resetPC = 1'b0;
end 
endmodule

